<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "${ent.filename}">
%BOOK_ENTITIES;
]>
	<section id="ESME_Settings">
	<title>External Short Messaging Entities (ESMEs)</title>
		<para>&THIS.PLATFORM; &THIS.APPLICATION; can now act as ESME (initiate bind to remote SMSC) or can also act as SMSC (accept bind from remote ESME). While defining an ESME (SMPP connection), you can optionally pass the Cluster name. If it is not passed, cluster name is same as ESME name. As the name suggests, its now possible to group different ESMEs in the same cluster. This is useful only when SMS is suppose to be routed out of &THIS.PLATFORM; &THIS.APPLICATION; to ESME. If there are multiple ESME's in a cluster, the load is shared in a round robin fashion to send out SMS. In case if one of the ESME is in <literal>UNBOUND</literal> state, the next <literal>BOUND</literal> smpp connection (within same cluster) will be used.
 			Below diagram explains the load-balancing between SMPP connections 
			<figure>
		  		<title>SMPP Load Balancing</title>
		  		<mediaobject>
		    		<imageobject>
		      			<imagedata fileref="images/smsc-SMPP-Loadbalancing.png" format="PNG" align="center"/>
		    		</imageobject>
		  		</mediaobject>
			</figure> 			
		</para>
		<para>
You can define multiple ESMEs, each with a unique name but the same <literal>systemId</literal> and declare their <literal>host-ip</literal> and <literal>port</literal> values as -1 (only for SMPP type Server). The SMSC will now accept multiple incoming BIND requests from any <literal>IP</literal> and any <literal>port</literal> as far as the <literal>systemId</literal> and <literal>Password</literal> matches. 
		</para>
		<para>
Alternatively, if you declare a real value for <literal>host-ip</literal>(say for example 10.199.7.23) and <literal>port</literal> as -1, the SMSC will accept as many BINDS as ESMEs defined from the specified IP but any port as far as the <literal>systemId</literal> and <literal>Password</literal> matches. 
		</para>
		

        <section id="ESME_Settings_Create">
        <title>Create new ESME</title>
        <section id="ESME_Settings_Create_CLI">
        <title>Using CLI</title>
        <para>
You can configure a new ESME by issuing the command <command> smpp esme create</command> with appropriate parameters as described below.
</para>
<screen><![CDATA[
Name
    smpp esme create

SYNOPSIS
    smpp esme create <name> <systemId> <host-ip> <port> 
    <SmppBindType> <SmppSession.Type> password <Specify password>
    system-type <sms | vms | ota > interface-version <3.3 | 3.4 | 5.0>
    esme-ton <esme address ton> esme-npi <esme address npi>
    esme-range <esme address range> cluster-name <clusterName>
    window-size <windowSize> connect-timeout <connectTimeout>
    request-expiry-timeout <requestExpiryTimeout>
    window-monitor-interval <windowMonitorInterval> 
    window-wait-timeout <windowWaitTimeout> counters-enabled <true | false> 
    enquire-link-delay <30000> charging-enabled <true | false> 
    source-ton <source address ton> source-npi <source address npi>
    source-range <source address range> routing-ton <routing address ton>
    routing-npi <routing address npi> routing-range <routing address range>

DESCRIPTION
    This command is used to configure a new ESME.

PARAMETERS

    Standard Parameters

    Name            - A unique name for this ESME configuration. You can 
                  define as many ESMEs as you want as far as the name is 
                  unique and the combination of 
                  SystemId:host-ip:port:SmppBindType is unique.

    System Id       - This is used to identify an ESME or an SMSC at bind 
                  time. An 'ESME system_id' identifies the ESME or ESME 
                  agent to the SMSC. The 'SMSC system_id' provides an 
                  identification of the SMSC to the ESME. You can define 
                  multiple ESMEs, each with a unique name but the same 
                  <literal>systemId<literal> to allow anonymous incoming
                  binds and multiple binds from the same IP depending on
                  the values specified for host-ip and port.

    host-ip & port      - If the SMSC is acting as an ESME, the BIND request will 
                  be sent to the configured IP and Port. If the SMSC is 
                  acting as a Server, it will accept incoming BIND 
                  requests from the specified IP and Port. 
                  If the port is unknown, you must pass '-1' as wild 
                  character.

                  When you define multiple ESMEs with the same systemId,if
                  host-ip and port values are -1 (for SMPP type Server), 
                  the SMSC will accept multiple incoming BIND requests
                      from any IP:port as long as the systemId and password
                  match. 

                  When you define multiple ESMEs with the same systemId,if
                  host-ip is a real value (a specific IP) and port value 
                  is -1, the SMSC will accept as many BINDS as ESMEs 
                  defined from the specified IP but any port as long as 
                  the systemId and password match. 

    SmppBindType        - Possible values: TRANSCEIVER, TRANSMITTER or RECEIVER. 
                  If the SMSC is acting as an ESME, it will initiate 
                  corresponding bind. If the SMSC is acting as a Server,
                  it will accept corresponding bind from a remote ESME.

    SmppSession.Type    - Possible values: SERVER or CLIENT. 
                  If the value is 'SERVER', the SMSC acts as a Server 
                  listening for incoming SMPP binds. 
                  If the value is 'CLIENT', the SMSC will initiate 
                  SMPP bind to a remote Server.

    Optional Parameters

    Password        - It is used by the SMSC to authenticate the identity of 
                  the binding ESME. The Service Provider may require 
                  ESMEâ€™s to provide a password when binding to the SMSC.

    system-type         - Default value is null. 
                  This is used to categorize the type of ESME that is 
                  binding to the SMSC.

    interface-version   - Default value is 3.4. 

                  It is used to indicate the version of the SMPP protocol.

                  It is set in 'SMPPServer Settings'. 

    esme-ton        - Defines ESME TON. If the SMPP Session Type is CLIENT,
                  this TON will be used in the BIND request. If the SMPP
                  Session Type is SERVER, the incoming BIND request should
                  have the same TON as configured here. If the configured 
                  value is null (-1), SMSC will ignore it in both cases.

    esme-npi        - Defines ESME NPI. If the SMPP Session Type is CLIENT,
                  this NPI will be used in the BIND request. If the SMPP
                  Session Type is SERVER, the incoming BIND request should
                  have the same NPI as configured here. If the configured 
                  value is null (-1), SMSC will ignore it in both cases.        

    esme-range      - Defines ESME Address Range. If the SMPP Session Type is 
                  CLIENT, this Address Range will be used in the BIND 
                  request. If the SMPP Session Type is SERVER, the 
                  incoming BIND request should have the same Address Range
                  as configured here. If the configured value is 
                  null (-1), SMSC will ignore it in both cases.

    cluster-name        - If it is not specified then its same as the name. 
                  It is possible to group different SMPP connections 
                  together by specifying the same cluster-name. 
                  All the SMPP connection's that are capable of sending 
                  out SMS are candidates for grouping.

    window-size         - Default value is 1. 
                  The window size is the amount of unacknowledged requests
                  that are permitted to be outstanding/unacknowledged at 
                  any given time. If more requests are added, the 
                  underlying stack will throw an exception.

                  This value is set only when ESME is defined as Client 
                  side. For Server side this value is taken from the 
                  'SMPP Server Settings'.
      
    connect-timeout     - Default value is 10000 milli seconds. 
                  This parameter is used to specify the time within which 
                  the connection to a remote SMSC server should be 
                  established.

                  This is useful only when ESME is defined as Client Side. 
                  For Server side this value is taken from the
                  the 'SMPP Server Settings'.

    request-expiry-timeout  - Default value is -1 (disabled). 
                  This parameter is used to specify the time to wait in 
                  milli seconds for an endpoint to respond to before it 
                  expires.

                  This is useful only when ESME is defined as Client Side. 
                  For Server side this value is taken from the
                  the 'SMPP Server Settings'.

    window-monitor-interval - Default value is -1 (disabled).
                  This parameter is used to specify the time between 
                  executions of monitoring the window for requests that 
                  expire. It is recommended that this value, generally, 
                  either matches or is half the value of 
                  'request-expiry-timeout'. Therefore, in the worst case
                  scenario, a request could take upto 1.5 times the 
                  'requestExpiryTimeout' to clear out.

                  This is useful only when ESME is defined as Client Side. 
                  For Server side this value is taken from the
                  the 'SMPP Server Settings'.

    window-wait-timeout     - Default value is 60000 milli seconds. 
                  This parameter is used to specify the time to wait 
                  until a slot opens up in the 'sendWindow'.

                  This is useful only when ESME is defined as Client Side. 
                  For Server side this value is taken from the
                  the 'SMPP Server Settings'.

    counters-enabled    - Default value is true. 
                  When this is enabled, SMSC exposes the statistics for
                  SMPP connections.

                  This is useful only when ESME is defined as Client Side. 
                  For Server side this value is taken from the
                  the 'SMPP Server Settings'.

    enquire-link-delay  - Default value is 30000 milli seconds. 
                  When SMSC connects to a remote server as CLIENT, it 
                  sends an 'ENQUIRE_LINK' after every configured 
                  enquire-link-delay.

    charging-enabled    - When SMSC option "txSmppCharging" is set to value
                  "Selected" then for each ESME we can set an option if
                  ESME originated messages will be charged by OCS via Diameter
                  before sending. If "charging-enabled" option is added,
                  messages from this ESME will be charged, if not - not.

    source-ton      - Every SMS coming into the SMSC via this ESME should have
                  the same 'source_addr_ton' as the value configured here.

                  If this configured value is null(-1) or not null and 
                  matches, the SMSC will compare the
                  'source_addr_npi' and 'source_addr_range' as explained 
                  below. 

                  If it doesn't match, the SMSC will reject this SMS with 
                  an error code '0x0000000A' indicating 
                  Invalid Source Address.

    source-npi      - Every SMS coming into the SMSC via this ESME should have
                  the same 'source_addr_npi' as the value configured here.
                  configured here. 

                  If this configured value is null(-1)
                  or not null and matches, the SMSC will compare the 
                  'source_addr_range' as below. 

                  If it doesn't match, the SMSC will reject this 
                  SMS with an error code '0x0000000A' indicating 
                  Invalid Source Address.

    source-range        - Every SMS coming into the SMSC via this ESME should have
                  the same 'source_addr_range' as the value configured 
                  here.This is a regular java expression and 
                  default value is ^[0-9a-zA-Z]*. 

                  If it matches, the SMSC will accept the incoming SMS 
                  and process further.

                  If it doesn't match, the SMSC will reject this 
                  SMS with an error code '0x0000000A' indicating 
                  Invalid Source Address.

    routing-ton     - The DefaultSmsRoutingRule will try to match the 
                  'dest_addr_ton' of outgoing SMS with the value 
                  configured here. If this configured value is null(-1) 
                  or not null and matches, the SMSC will compare the
                  'dest_addr_npi' and 'destination_addr' as explained 
                  below. If it doesn't match, the SMSC will select the 
                  next ESME in the list for matching routing rule.

                  DefaultSmsRoutingRule will consider ESME for routing 
                  only if
                  1) SmppBindType is TRANSCEIVER
                  2) SmppBindType is RECEIVER and 
                  SmppSession.Type is SERVER
                  3) SmppBindType is TRANSMITTER and 
                  SmppSession.Type is CLIENT

    routing-npi     - The DefaultSmsRoutingRule will try to match the 
                  'dest_addr_npi' of outgoing SMS with the value
                  configured here. If this configured value is null(-1)
                  or not null and matches, the SMSC will compare the 
                  'destination_addr' as below. If it doesn't match, the 
                  SMSC will select the next ESME in the list for matching 
                  routing rule.

                  DefaultSmsRoutingRule will consider ESME for routing 
                  only if
                  1) SmppBindType is TRANSCEIVER
                  2) SmppBindType is RECEIVER and 
                  SmppSession.Type is SERVER
                  3) SmppBindType is TRANSMITTER and 
                  SmppSession.Type is CLIENT

    routing-range       - The DefaultSmsRoutingRule will try to match the 
                  'destination_addr' of outgoing SMS with the value
                  configured here. This is a regular java expression and 
                  default value is ^[0-9a-zA-Z]*. If it matches, the SMSC
                  will send the SMS out over this SMPP connection. If it 
                  doesn't match, the SMSC will select the next ESME in 
                  the list for matching routing rule.

                  DefaultSmsRoutingRule will consider ESME for routing 
                  only if
                  1) SmppBindType is TRANSCEIVER
                  2) SmppBindType is RECEIVER and 
                  SmppSession.Type is SERVER
                  3) SmppBindType is TRANSMITTER and 
                  SmppSession.Type is CLIENT
    
]]></screen>
            </section>
            <section id="ESME_Settings_Create_GUI">
            <title>Using GUI</title>
            <procedure>
                <title>Create new ESME using GUI</title>
                <step><para>In the GUI Management Console for SMSC Gateway, click on 'ESMEs' in the left panel.
                </para></step>
                <step><para>The main panel will display the existing ESMEs (if any), one each in a row with corresponding actions (start, stop, delete, update) for each row. Below this you will find the button 'Create ESME'.
                </para></step>
                <step><para>You can create a new ESME by launching the 'Create ESME' window by clicking on the blue coloured 'Create ESME' button. The 'Create ESME' window will display all ESME paramters that must be defined by you. For more details of these parameters please refer to the descriptions of the CLI commands for the same in the preceding section. 
                </para></step>
                <step><para>
                Enter appropriate values for all the parameters and then click on the 'Create' button at the bottom of this 'Create ESME' window. This action will create a new ESME with parameters as defined by you.
                </para></step>
                <step><para>If there is an error in defining the ESME, then you will find the details of the error in the Management Console Log section below.
                </para></step>
            </procedure>
            </section>  

        </section>


		<section id="ESME_Settings_Modify">
		<title>Modify ESME</title>
		<section id="ESME_Settings_Modify_CLI">
		<title>Using CLI</title>
		<para>
You can modify an existing ESME by issuing the command <command>smpp esme modify</command> with appropriate parameters as described below.
</para>
<screen><![CDATA[
Name
	smpp esme modify

SYNOPSIS
    smpp esme modify <name> password <password>
    esme-ton <esme address ton> esme-npi <esme address npi>
    esme-range <esme address range> window-size <windowSize>
    connect-timeout <connectTimeout>
    request-expiry-timeout <requestExpiryTimeout>
    window-monitor-interval <windowMonitorInterval>
    window-wait-timeout <windowWaitTimeout>
    counters-enabled <true | false> enquire-link-delay <30000>
    charging-enabled <true | false> source-ton <source address ton>
    source-npi <source address npi> source-range <source address range>
    routing-ton <routing address ton> routing-npi <routing address npi>
    routing-range <routing address range>

DESCRIPTION
	This command is used to modify an existing ESME.

PARAMETERS

	Standard Parameters

	Name			- A name of an existing ESME.

	Password		- It is used by the SMSC to authenticate the identity of 
				  the binding ESME. The Service Provider may require 
				  ESMEâ€™s to provide a password when binding to the SMSC.
				  Changed values takes effect when SMPP is restarted.

	esme-ton 		- Defines ESME TON. If the SMPP Session Type is CLIENT,
				  this TON will be used in the BIND request. If the SMPP
				  Session Type is SERVER, the incoming BIND request should
				  have the same TON as configured here. If the configured 
				  value is null (-1), SMSC will ignore it in both cases.
				  Changed values takes effect when SMPP is restarted.

	esme-npi 		- Defines ESME NPI. If the SMPP Session Type is CLIENT,
				  this NPI will be used in the BIND request. If the SMPP
				  Session Type is SERVER, the incoming BIND request should
				  have the same NPI as configured here. If the configured 
				  value is null (-1), SMSC will ignore it in both cases.
				  Changed values takes effect when SMPP is restarted.		

	esme-range 		- Defines ESME Address Range. If the SMPP Session Type is 
				  CLIENT, this Address Range will be used in the BIND 
				  request. If the SMPP Session Type is SERVER, the 
				  incoming BIND request should have the same Address Range
				  as configured here. If the configured value is 
				  null (-1), SMSC will ignore it in both cases.
				  Changed values takes effect when SMPP is restarted.

	window-size 		- Default value is 1. 
				  The window size is the amount of unacknowledged requests
				  that are permitted to be outstanding/unacknowledged at 
				  any given time. If more requests are added, the 
				  underlying stack will throw an exception.

				  This value is set only when ESME is defined as Client 
				  side. For Server side this value is taken from the 
				  'SMPP Server Settings'.
				  Changed values takes effect when SMPP is restarted.
	  
	connect-timeout		- Default value is 10000 milli seconds. 
				  This parameter is used to specify the time within which 
				  the connection to a remote SMSC server should be 
				  established.

				  This is useful only when ESME is defined as Client Side. 
				  For Server side this value is taken from the
				  the 'SMPP Server Settings'.
				  Changed values takes effect when SMPP is restarted.

	request-expiry-timeout	- Default value is -1 (disabled). 
				  This parameter is used to specify the time to wait in 
				  milli seconds for an endpoint to respond to before it 
				  expires.

				  This is useful only when ESME is defined as Client Side. 
				  For Server side this value is taken from the
				  the 'SMPP Server Settings'.
				  Changed values takes effect when SMPP is restarted.

	window-monitor-interval	- Default value is -1 (disabled).
				  This parameter is used to specify the time between 
				  executions of monitoring the window for requests that 
				  expire. It is recommended that this value, generally, 
				  either matches or is half the value of 
				  'request-expiry-timeout'. Therefore, in the worst case
				  scenario, a request could take upto 1.5 times the 
				  'requestExpiryTimeout' to clear out.

				  This is useful only when ESME is defined as Client Side. 
				  For Server side this value is taken from the
				  the 'SMPP Server Settings'.
				  Changed values takes effect when SMPP is restarted.

	window-wait-timeout 	- Default value is 60000 milli seconds. 
				  This parameter is used to specify the time to wait 
				  until a slot opens up in the 'sendWindow'.

				  This is useful only when ESME is defined as Client Side. 
				  For Server side this value is taken from the
				  the 'SMPP Server Settings'.
				  Changed values takes effect when SMPP is restarted.

	counters-enabled 	- Default value is true. 
				  When this is enabled, SMSC exposes the statistics for
				  SMPP connections.

				  This is useful only when ESME is defined as Client Side. 
				  For Server side this value is taken from the
				  the 'SMPP Server Settings'.
				  Changed values takes effect when SMPP is restarted.

	enquire-link-delay	- Default value is 30000 milli seconds. 
				  When SMSC connects to a remote server as CLIENT, it 
				  sends an 'ENQUIRE_LINK' after every configured 
				  enquire-link-delay.
				  Changed values takes effect immediately

	charging-enabled	- When SMSC option "txSmppCharging" is set to value
	              "Selected" then for each ESME we can set an option if
	              ESME originated messages will be charged by OCS via Diameter
	              before sending. If "charging-enabled" option is added,
	              messages from this ESME will be charged, if not - not.
	              Changed values takes effect immediately

	source-ton		- Every SMS coming into the SMSC via this ESME should have
				  the same 'source_addr_ton' as the value configured here.

				  If this configured value is null(-1) or not null and 
				  matches, the SMSC will compare the
				  'source_addr_npi' and 'source_addr_range' as explained 
				  below. 

				  If it doesn't match, the SMSC will reject this SMS with 
				  an error code '0x0000000A' indicating 
				  Invalid Source Address.
				  Changed values takes effect immediately

	source-npi		- Every SMS coming into the SMSC via this ESME should have
				  the same 'source_addr_npi' as the value configured here.
				  configured here. 

				  If this configured value is null(-1)
				  or not null and matches, the SMSC will compare the 
				  'source_addr_range' as below. 

				  If it doesn't match, the SMSC will reject this 
				  SMS with an error code '0x0000000A' indicating 
				  Invalid Source Address.
				  Changed values takes effect immediately

	source-range		- Every SMS coming into the SMSC via this ESME should have
				  the same 'source_addr_range' as the value configured 
				  here.This is a regular java expression and 
				  default value is ^[0-9a-zA-Z]*. 

				  If it matches, the SMSC will accept the incoming SMS 
				  and process further.

				  If it doesn't match, the SMSC will reject this 
				  SMS with an error code '0x0000000A' indicating 
				  Invalid Source Address.
				  Changed values takes effect immediately

	routing-ton		- The DefaultSmsRoutingRule will try to match the 
				  'dest_addr_ton' of outgoing SMS with the value 
				  configured here. If this configured value is null(-1) 
				  or not null and matches, the SMSC will compare the
				  'dest_addr_npi' and 'destination_addr' as explained 
				  below. If it doesn't match, the SMSC will select the 
				  next ESME in the list for matching routing rule.

				  DefaultSmsRoutingRule will consider ESME for routing 
				  only if
				  1) SmppBindType is TRANSCEIVER
				  2) SmppBindType is RECEIVER and 
				  SmppSession.Type is SERVER
				  3) SmppBindType is TRANSMITTER and 
				  SmppSession.Type is CLIENT
				  Changed values takes effect immediately

	routing-npi		- The DefaultSmsRoutingRule will try to match the 
				  'dest_addr_npi' of outgoing SMS with the value
				  configured here. If this configured value is null(-1)
				  or not null and matches, the SMSC will compare the 
				  'destination_addr' as below. If it doesn't match, the 
				  SMSC will select the next ESME in the list for matching 
				  routing rule.

				  DefaultSmsRoutingRule will consider ESME for routing 
				  only if
				  1) SmppBindType is TRANSCEIVER
				  2) SmppBindType is RECEIVER and 
				  SmppSession.Type is SERVER
				  3) SmppBindType is TRANSMITTER and 
				  SmppSession.Type is CLIENT
				  Changed values takes effect immediately

	routing-range		- The DefaultSmsRoutingRule will try to match the 
				  'destination_addr' of outgoing SMS with the value
				  configured here. This is a regular java expression and 
				  default value is ^[0-9a-zA-Z]*. If it matches, the SMSC
				  will send the SMS out over this SMPP connection. If it 
				  doesn't match, the SMSC will select the next ESME in 
				  the list for matching routing rule.

				  DefaultSmsRoutingRule will consider ESME for routing 
				  only if
				  1) SmppBindType is TRANSCEIVER
				  2) SmppBindType is RECEIVER and 
				  SmppSession.Type is SERVER
				  3) SmppBindType is TRANSMITTER and 
				  SmppSession.Type is CLIENT
				  Changed values takes effect immediately
	
]]></screen>
			</section>
			<section id="ESME_Settings_Modify_GUI">
			<title>Using GUI</title>
			<procedure>
				<title>Modify an existing ESME using GUI</title>
				<step><para>In the GUI Management Console for SMSC Gateway, click on 'ESMEs' in the left panel.
				</para></step>
				<step><para>The main panel will display the existing ESMEs (if any), one each in a row with corresponding actions (start, stop, delete, update) for each row.
				</para></step>
				<step><para>You can update an existing by launching the 'ESME &lt;name&gt; properties' window by clicking on the blue coloured 'Update ESME' button. The 'ESME &lt;name&gt; properties' window will display all ESME paramters that can be updated by you. For more details of these parameters please refer to the descriptions of the CLI commands for the same in the preceding section. 
				</para></step>
				<step><para>
				Update appropriate values for all the parameters and then click on the 'Close' button. This action will modify a new ESME with parameters as defined by you.
				</para></step>
				<step><para>If there is an error in defining the ESME, then you will find the details of the error in the Management Console Log section below.
				</para></step>
			</procedure>
			</section>	

		</section>



		<section id="ESME_Settings_View">
		<title>View ESME Details</title>
			<section id="ESME_Settings_View_View_CLI">
			<title>Using CLI</title>
<para>
You can view the details of all configured ESMEs by issuing the command <command>smpp esme show</command> as described below.
</para>
<screen><![CDATA[
Name
	smpp esme show

SYNOPSIS
	smpp esme show

DESCRIPTION
	This command is used to list all configured ESMEs.
]]></screen>
			</section>
			<section id="ESME_Settings_View_View_GUI">
			<title>Using GUI</title>
			<procedure>
				<title>View ESME using the GUI</title>
				<step><para>In the GUI Management Console for SMSC Gateway, click on 'ESMEs' in the left panel.
				</para></step>
				<step><para>The main panel will display the existing ESMEs (if any), one each in a row with corresponding actions (start, stop, delete) for each row. 
				</para></step>
				<step><para>You can view the details of an ESME by clicking on the row corresponding to the ESME. All relevant details of the ESME will be displayed in an expanded format.
				</para></step>
			</procedure>
			</section>
		</section>
		<section id="ESME_Settings_Delete">
		<title>Delete an existing ESME</title>
			<section id="ESME_Settings_Delete_CLI">
			<title>Using CLI</title>
<para>
You can delete any ESME by issuing the command <command>smpp esme delete</command> with appropriate parameters as described below.
</para>
<screen><![CDATA[
Name
	smpp esme delete

SYNOPSIS
	smpp esme delete <esmeName>

DESCRIPTION
	This command is used to delete an existing ESME.

PARAMETERS
	esmeName		- Name of the ESME to be destroyed.
]]></screen>
			</section>
			<section id="ESME_Settings_Delete_GUI">
			<title>Using GUI</title>
			<procedure>
				<title>Delete ESME using the GUI</title>
				<step><para>In the GUI Management Console for SMSC Gateway, click on 'ESMEs' in the left panel.
				</para></step>
				<step><para>The main panel will display the existing ESMEs (if any), one each in a row with corresponding actions (start, stop, delete) for each row. 
				</para></step>
				<step><para>To delete an existing ESME click on the delete icon marked 'x' in red, for the row corresponding to the ESME. You can delete an ESME only if it is stopped.
				</para></step>
			</procedure>
			</section>
		</section>
		<section id="ESME_Settings_Start">
		<title>Start ESME</title>
			<section id="ESME_Settings_start_CLI">
			<title>Using CLI</title>
<para>
You can start an ESME by issuing the command <command>smpp esme start</command> with appropriate parameters as described below.
</para>
<screen><![CDATA[
Name
	smpp esme start

SYNOPSIS
	smpp esme start <esmeName>

DESCRIPTION
	This command is used to start an existing ESME.

PARAMETERS
	esmeName		- Name of the ESME to be started.
]]></screen>
			</section>
			<section id="ESME_Settings_start_GUI">
			<title>Using GUI</title>
			<procedure>
				<title>Start ESME using the GUI</title>
				<step><para>In the GUI Management Console for SMSC Gateway, click on 'ESMEs' in the left panel.
				</para></step>
				<step><para>The main panel will display the existing ESMEs (if any), one each in a row with corresponding actions (start, stop, delete) for each row. 
				</para></step>
				<step><para>To start an existing ESME click on the start icon lit in green, for the row corresponding to the ESME. You can start an ESME only if it is currently stopped.
				</para></step>
			</procedure>
			</section>
		</section>
		<section id="ESME_Settings_Stop">
		<title>Stop ESME</title>
		<section id="ESME_Settings_stop_CLI">
			<title>Using CLI</title>
<para>
You can stop an ESME by issuing the command <command>smpp esme stop</command> with appropriate parameters as described below.
</para>
<screen><![CDATA[
Name
	smpp esme stop

SYNOPSIS

DESCRIPTION
	This command is used to stop an already running ESME.

PARAMETERS
	esmeName		- Name of the ESME to be stopped.
]]></screen>
			</section>
			<section id="ESME_Settings_stop_GUI">
			<title>Using GUI</title>
			<procedure>
				<title>Stop ESME using the GUI</title>
				<step><para>In the GUI Management Console for SMSC Gateway, click on 'ESMEs' in the left panel.
				</para></step>
				<step><para>The main panel will display the existing ESMEs (if any), one each in a row with corresponding actions (start, stop, delete) for each row. 
				</para></step>
				<step><para>To stop an ESME click on the stop icon lit in red, for the row corresponding to the ESME. You can stop an ESME only if it is currently running.
				</para></step>
			</procedure>
			</section>
		</section>
		<section id="others_ESME">
		<title>Other ESME Operations</title>
		<section id="others_ESME_GUI">
		<title>Using GUI</title>
		<para>You can perform more operations in the GUI for any configured ESME. You can enable/disable Log Bytes and Log Pdu, dump window and reset counters.</para>
		<procedure>
				<title>Other ESME Operations using the GUI</title>
				<step><para>In the GUI Management Console for SMSC Gateway, click on 'ESMEs' in the left panel.
				</para></step>
				<step><para>The main panel will display the existing ESMEs (if any), one each in a row with corresponding actions (start, stop, delete) for each row. 
				</para></step>
				<step><para>You can view the details of an ESME by clicking on the row corresponding to the ESME. All relevant details of the ESME will be displayed in an expanded format.
				</para></step>
				<step><para>At the bottom of this expanded display you will find 6 buttons allowing you to perform the operations DisableLogBytes, DisableLogPdu, DumpWindow, EnableLogBytes, EnableLogPdu and ResetCounters.
				</para></step>
			</procedure>
		</section>
		</section>
	</section>
	